name: Android CI

on:
  push:
    branches:
      - 'master'
      - 'Room'
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:
    inputs:
      app_id:
        description: 'com.example.sandbox'
        required: true
      branch:
        description: 'master OR Room'
        required: true
        default: 'master'

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
#  build:
#    name: Setup Environment and build
#    runs-on: ubuntu-latest
#    timeout-minutes: 60
#
#    steps:
#      - name: Checkout the code to specific branch
#        uses: actions/checkout@v3
#
#      - name: Validate Gradle Wrapper
#        uses: gradle/wrapper-validation-action@v1
#
#      - name: Copy CI gradle.properties
#        run:  cat .github/ci-gradle.properties >> gradle.properties
#
#      - name: set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'zulu'
#
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#
#      - name: Check KtLint
#        run: ./gradlew ktlintCheck --stacktrace
#
#      - name: Check Android lint
#        run: ./gradlew lintDebug --stacktrace
#
#      - name: Run Unit tests
#        run: ./gradlew testDebugUnitTest
#
#      - name: Unit Test Report
#        uses: asadmansr/android-test-report-action@v1.2.0
#        if: ${{ always() }}
#
#      - name: Upload reports
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: build-reports
#          path: |
#              app/build/reports
#              uiBox/build/reports
#
#      - name: Build with Gradle
#        run: ./gradlew clean assembleRelease --no-daemon --stacktrace
#
#      - name: Upload the signed artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: signed-app
#          path: app/build/outputs/apk/release/app-release.apk


  androidTest:
#    needs: [ build ]
    name: Instrumental Tests
    runs-on: macOS-latest
    timeout-minutes: 45

    steps:
    - name: Checkout the code to specific branch
      uses: actions/checkout@v3

    - name: Copy CI gradle.properties
      run:  cat .github/ci-gradle.properties >> gradle.properties

    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'zulu'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    # Retrieve the cached emulator snapshot.
    - name: AVD cache
      uses: actions/cache@v3
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-29

    # Create a new emulator snapshot if it isn't present in the cache.
    - name: create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        disable-animations: false
        force-avd-creation: false
        ram-size: 4096M
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        script: echo "Generated AVD snapshot for caching."

    - name: Run Android tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        disable-animations: false
        force-avd-creation: false
        ram-size: 4096M
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
        script: ./gradlew connectedDebugAndroidTest --stacktrace

    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: android-test-reports
        path: app/build/reports/androidTests
